#!/bin/bash

# ----------------------------------------------
# Modified version of Waylon Walker's ta script.
# ----------------------------------------------

not_in_tmux() {
  [ -z "$TMUX" ]
}

DIR=$1

# If no arguments are passed in try to immediately attach or start without further input
if [ -z "$DIR" ]; then
  if not_in_tmux; then
    tmux attach && exit 1 || DIR="--start"
  else
    exit 1
  fi
fi

# If --start was passed in immediately start a new session based on the current directory
if [ "$DIR" == "--start" ]; then
  path_name="$(basename "$PWD" | tr . -)"
  session_name=${path_name//./_}
elif [ "$DIR" == "--kube" ]; then
  cluster_name=$(kubectx | fzf)
  kubectx $cluster_name
  path_name=$HOME
  session_name="$cluster_name"_kubectl
elif [ "$DIR" == "--use-env" ]; then
  # ask the user which directory to start in
  _session_name=$(cd $PROJ_DIR && ls -d */ | sed  "s|/||g" | fzf --reverse)
  session_name=${_session_name//./_}
  path_name=$PROJ_DIR/$_session_name
else
  # ask the user which directory to start in
  _session_name=$(cd $DIR && ls -d */ | sed  "s|/||g" | fzf --reverse)
  session_name=${_session_name//./_}
  path_name=$DIR/$_session_name
fi

if [ -z "$session_name" ]; then
  # operation cancelled by user
  exit 1
fi

session_exists() {
  # checks if the $session_name exists
  tmux has-session -t "=$session_name"
}

create_detached_session() {
  if [ "$DIR" == "--start" ]; then
    (TMUX='' 
    tmux new-session -Ad -s "$session_name" -c $path_name
    )
  elif [ "$DIR" == "--kube" ]; then
    (TMUX='' 
    tmux new-session -Ad -s "$session_name" -c $path_name k9s --context $cluster_name;
    )
  else
    (TMUX='' 
    tmux new-session -Ad -s "$session_name" -c $path_name;
    tmux split-window -vb -t "$session_name" -c $path_name -p 70 nvim;
    )
  fi
}

create_if_needed_and_attach() {
  if not_in_tmux; then
    tmux new-session -As "$session_name" -c $path_name
  else
    if ! session_exists; then
      create_detached_session
    fi
    tmux switch-client -t "$session_name"
  fi
}

attatch_to_first_session() {
  tmux attach -t $(tmux list-sessions -F "${session_name}" | head -n 1)
  tmux choose-tree -Za
}

create_if_needed_and_attach || attatch_to_first_session
